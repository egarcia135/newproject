{"version":3,"sources":["actions/projectActions.js","actions/types.js","componets/Project/ProjectItem.js","componets/Project/CreateProjectButton.js","componets/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","componets/Layout/Header.js","componets/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlog_Reducer.js","reducers/securityReducer.js","reducers/index.js","store.js","componets/Project/UpdateProject.js","componets/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogAction.js","componets/ProjectBoard/Backlog.js","componets/ProjectBoard/ProjectBoard.js","componets/ProjectBoard/ProjectTasks/AddProjectTask.js","componets/ProjectBoard/ProjectTasks/UpdateProjectTask.js","componets/Layout/Landing.js","componets/UserManagement/Register.js","componets/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","propType","PropTypes","object","isRequired","func","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","inititalState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityclass","priority","summary","acceptanceCriteria","protoType","Backlog","tasks","project_tasks_props","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","boardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","created_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3780d54c.chunk.js","sourcesContent":["import axios from \"axios\"\nimport {GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"./types\"\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/project\", project)\n        history.push(\"/dashboard\")\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        }) \n        \n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        }) \n    }\n}\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\")\n    dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n    });\n}\n\nexport const getProject = (id, history) => async dispatch => {\n\n    try {\n        const res = await axios.get(`/api/project/${id}`)\n        dispatch({\n            type: GET_PROJECT,\n            payload: res.data\n        });\n    } catch(error) {\n        history.push(\"/dashboard\")\n    }\n}\n\nexport const deleteProject = id => async dispatch => {\n    if(\n        window.confirm(\n            \"Are you sure?\"\n        )    \n    ) {\n        await axios.delete(`/api/project/${id}`)\n        dispatch({\n            type:DELETE_PROJECT,\n            payload: id\n        })\n    }\n}\n\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport { deleteProject } from \"../../actions/projectActions\"\n\n\nclass ProjectItem extends Component {\n\n    onDeleteClick = id => {\n        this.props.deleteProject(id)\n    }\n\n    render() {\n    const {project} = this.props\n        return (\n            <div className=\"container\">\n                            <div className=\"card card-body bg-light mb-3\">\n                                <div className=\"row\">\n                                    <div className=\"col-2\">\n                                        <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                                    </div>\n                                    <div className=\"col-lg-6 col-md-4 col-8\">\n                                        <h3>{project.projectName}</h3>\n                                        <p>{project.description}</p>\n                                    </div>\n                                    <div className=\"col-md-4 d-none d-lg-block\">\n                                        <ul className=\"list-group\">\n                                            <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                                <li className=\"list-group-item board\">\n                                                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                                </li>\n                                            </Link>\n                                            <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                                <li className=\"list-group-item update\">\n                                                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                                </li>\n                                            </Link>\n                                           \n                                                <li className=\"list-group-item delete\" \n                                                onClick={this.onDeleteClick.bind(\n                                                    this, project.projectIdentifier)}>\n                                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                                </li>\n                                            \n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n        )\n    }\n}\n\nProjectItem.propTypes= {\n    deleteProject: PropTypes.func.isRequired\n}\nexport default connect(null, {deleteProject})(ProjectItem);\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n    return  (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    )\n}\nexport default CreateProjectButton;\n\n\n","import React, { Component } from 'react'\nimport ProjectItem from './Project/ProjectItem'\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\"\nimport PropTypes from \"prop-types\"\n\n\nclass Dashboard extends Component {\n\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n    render() {\n        const {projects} = this.props.project\n\n        return (\n            <div className=\"projects\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 className=\"display-4 text-center\">Projects</h1>\n                        <br />\n                        <CreateProjectButton/>\n\n                        <br />\n                        <hr />\n                        {projects.map(project => (\n                            <ProjectItem key={project.id} project = {project}/>\n                        ))\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nDashboard.propType = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    project:state.project,\n\n})\n\nexport default connect(mapStateToProps, {getProjects})(Dashboard);\n","import axios from \"axios\"\nconst setJWTToken = token => {\n    if(token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"]\n    }\n};\n\nexport default setJWTToken","import axios from \"axios\"\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\"\nimport setJWTToken from \"../securityUtils/setJWTToken\"\nimport jwt_decode from \"jwt-decode\"\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/users/register\", newUser)\n        history.push(\"/login\")\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n\n    }\n}\n\nexport const login = LoginRequest => async dispatch => {\n\n    try {\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\n        const{token} = res.data\n        localStorage.setItem(\"jwtToken\", token)\n        setJWTToken(token)\n        const decoded = jwt_decode(token)\n\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        })\n\n\n    } catch(err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n\n}\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\")\n    setJWTToken(false)\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    })\n}","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport {logout} from \"../../actions/securityActions\"\n\nclass Header extends Component {\n\n    logout() {\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n\n    render() {\n        const {validToken, user} = this.props.security;\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" to=\"/dashboard\">\n                            <i className=\"fa fa-user-circle mr-1\" />\n                            {user.fullName}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" \n                            to=\"/logout\"\n                           onClick={this.logout.bind(this)}\n                        >\n                           Logout\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" to=\"/register\">\n                            Sign up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        )\n\n        let headerLinks;\n        if(validToken && user) {\n            headerLinks = userIsAuthenticated\n        } else {\n            headerLinks = userIsNotAuthenticated\n        }\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"/\">\n                        Personal Project Management Tool\n                    </Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {headerLinks}\n\n                \n                </div>\n            </nav>\n        )\n    }\n}\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps, {logout}) (Header)\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport  { connect } from \"react-redux\"\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\"\n\nclass AddProject extends Component {\n    constructor() {\n        super()\n\n        this.state={\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value})\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n\n        this.props.createProject(newProject, this.props.history)\n    }\n\n    render() {\n        const {errors} = this.state\n\n        \n        return (\n            <div className=\"project\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h5 className=\"display-4 text-center\">Create Project form</h5>\n                        <hr />\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.projectName\n                                    })} \n                                    placeholder=\"Project Name\" \n                                    name=\"projectName\"\n                                    value={this.state.projectName}\n                                    onChange = {this.onChange}\n                                />\n                                {errors.projectName && (\n                                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                )}\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.projectIdentifier\n                                    })} \n                                    placeholder=\"Unique Project ID\"\n                                    name=\"projectIdentifier\"\n                                    value={this.state.projectIdentifier}\n                                    onChange = {this.onChange}\n                                />\n                                {errors.projectIdentifier && (\n                                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                                )}\n                            </div>\n                            <div className=\"form-group\">\n                                <textarea \n                                    className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.description\n                                    })}\n                                    placeholder=\"Project Description\"\n                                    name=\"description\"\n                                    value={this.state.description}\n                                    onChange = {this.onChange}\n                                />\n                                {errors.description && (\n                                    <div className=\"invalid-feedback\">{errors.description}</div>\n                                )}\n                            </div>\n                            <h6>Start Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"start_date\"\n                                    value={this.state.start_date} \n                                    onChange = {this.onChange}\n                                />\n                            </div>\n                            <h6>Estimated End Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"end_date\" \n                                    value={this.state.end_date}\n                                    onChange = {this.onChange}\n                                />\n                            </div>\n    \n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n    \n})\n\nexport default connect (\n    mapStateToProps, \n    { createProject }\n) (AddProject )\n","import { GET_ERRORS } from \"../actions/types\";\nimport { bindActionCreators } from \"redux\";\n\nconst initialState = {};\n\nexport default function(state=initialState, action) {\n    switch(action.type) {\n        case GET_ERRORS:\n        return action.payload;\n\n        default: \n        return state\n\n    }\n\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\"\n\nconst initialState = {\n    projects: [],\n    project: {}\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case GET_PROJECTS:\n        return {\n            ...state,\n            projects: action.payload\n        };\n        case GET_PROJECT:\n        return {\n            ...state,\n            project: action.payload\n        }\n        case DELETE_PROJECT:\n        return {\n            ...state,\n            projects: state.projects.filter(\n                project=>project.projectIdentifier !== action.payload\n            )\n        }\n\n        default:\n            return state\n    }\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\n\nconst inititalState = {\n    project_tasks: [],\n    project_task: {}\n}\n\n\nexport default function(state=inititalState, action){\n    switch(action.type) {\n\n        case GET_BACKLOG:\n            return{\n                ...state,\n                project_tasks: action.payload\n            }\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            }\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\n            }\n\n\n        default:\n            return state;\n    }\n}","import {SET_CURRENT_USER} from \"../actions/types\"\n\n\nconst initialState = {\n    user: {},\n    validToken: false\n}\n\nconst booleanActionPayload = (payload) => {\n    if(payload) {\n        return true\n    } else {\n        return false\n    }\n}\n\nexport default function(state=initialState, action) {\n\n    switch(action.type){\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                validToken: booleanActionPayload(action.payload),\n                user: action.payload\n            }\n        \n        default:\n            return state\n    }\n\n}","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlog_Reducer from \"./backlog_Reducer\";\nimport securityReducer from \"./securityReducer\";\n\n\nexport default combineReducers ({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlog_Reducer,\n    security: securityReducer\n\n});","import { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"./reducers\"\n\nconst initialState = {}\nconst middleware = [thunk]\n\nlet store;\n\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && \nwindow.__REDUX_DEVTOOLS_EXTENSION__()\n\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(\n        rootReducer, \n        initialState, \n        compose(\n            applyMiddleware(...middleware),\n            ReactReduxDevTools\n            \n        )\n    );\n\n} else {\n    store = createStore(\n        rootReducer, \n        initialState, \n        compose(applyMiddleware(...middleware))\n    );\n}\n\n\nexport default store\n\n","import React, { Component } from 'react'\nimport { getProject, createProject} from \"../../actions/projectActions\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport classnames from \"classnames\"\n\n\nclass UpdateProject extends Component {\n\n    constructor() {\n        super()\n\n        this.state = {\n            \"id\": \"\",\n            \"projectName\": \"\" ,\n            \"projectIdentifier\": \"\",\n            \"description\":\"\",\n            \"start_date\":\"\",\n            \"end_date\": \"\",\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if(nextProps.errors) {\n            this.setState({errors:nextProps.errors})\n        }\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        })\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    onSubmit(e) {\n        e.preventDefault()\n        \n        const updateProject = {\n            id: this.state.id,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        }\n\n        this.props.createProject(updateProject, this.props.history)\n    }\n    render() {\n        const {errors} = this.state\n        return (\n            <div className=\"project\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h5 className=\"display-4 text-center\">Update Project form</h5>\n                        <hr />\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.projectName\n                                    })}\n                                    placeholder=\"Project Name\"\n                                    name=\"projectName\" \n                                    value={this.state.projectName}\n                                    onChange = {this.onChange}\n                                />\n                                {\n                                    errors.projectName && (\n                                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                )}\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Unique Project ID\"\n                                    name=\"projectIdentifier\"\n                                    value={this.state.projectIdentifier}\n                                    onChange = {this.onChange}\n                                    disabled \n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <textarea \n                                    className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\": errors.description\n                                    })}\n                                    placeholder=\"Project Description\"\n                                    name=\"description\"\n                                    value={this.state.description}\n                                    onChange = {this.onChange}\n                                />\n                                {\n                                    errors.description && (\n                                    <div className=\"invalid-feedback\">{errors.description}</div>\n                                )}\n                            </div>\n                            <h6>Start Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" \n                                    className=\"form-control form-control-lg\"\n                                    name=\"start_date\" \n                                    value={this.state.start_date}\n                                    onChange = {this.onChange}\n                                />\n                            </div>\n                            <h6>Estimated End Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" \n                                    className=\"form-control form-control-lg\"\n                                    name=\"end_date\" \n                                    value={this.state.end_date}\n                                    onChange = {this.onChange}\n                                />\n                            </div>\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nUpdateProject.propTypes = {  \n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n    \n};\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps, \n    {getProject, createProject}\n) (UpdateProject);\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {deleteProjectTask} from '../../../actions/backlogAction'\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\n\nclass ProjectTask extends Component {\n\n    onDeleteClick(backlog_id, pt_id){\n        this.props.deleteProjectTask(backlog_id, pt_id)    \n    }\n    render() {\n        const {project_task} = this.props \n        let priorityString;\n        let priorityclass;\n        \n        if(project_task.priority === 1) {\n            priorityclass = \"bg-danger text-light\"\n            priorityString = \"HIGH\"\n        }\n        if(project_task.priority === 2) {\n            priorityclass = \"bg-warning text-light\"\n            priorityString = \"MEDIUM\"\n        }\n        if(project_task.priority === 3) {\n            priorityclass = \"bg-info text-light\"\n            priorityString = \"LOW\"\n        }\n\n        return (\n            <div className=\"card mb-1 bg-light\">\n \n            <div className={`card-header text-primary ${priorityclass}`}>\n                ID: {project_task.projectSequence} -- Priority: {priorityString}\n            </div>\n            <div className=\"card-body bg-light\">\n                <h5 className=\"card-title\">{project_task.summary}</h5>\n                <p className=\"card-text text-truncate \">\n                    {project_task.acceptanceCriteria}\n                </p>\n                <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\n                    View / Update\n                </Link>\n\n                <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, \n                    project_task.projectIdentifier, \n                    project_task.projectSequence)}>\n                    Delete\n                </button>\n            </div>\n        </div>\n\n        )\n    }\n}\nProjectTask.protoType = {\n    deleteProjectTask: PropTypes.func.isRequired\n}\nexport default connect(\n    null, {deleteProjectTask})\n    (ProjectTask);\n","import axios from 'axios'\nimport {GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"./types\"\n\n\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\n    try {\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        }) \n    } catch(err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        }) \n\n    }\n}\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\n        dispatch({\n            type: GET_BACKLOG,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        }) \n\n    }\n}\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\n        dispatch({\n            type: GET_PROJECT_TASK,\n            payload: res.data\n        })\n    } catch(err) {\n        history.push(\"/dashboard\");\n    }\n}\n\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\n    try {\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task)\n        history.push(`/projectBoard/${backlog_id}`)\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n\n    } catch(err) {\n\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n\n    }\n}\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n    // if(window.confirm(`You are deleting ${pt_id}.`)) {\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\n        dispatch({\n            type: DELETE_PROJECT_TASK,\n            payload: pt_id\n        })\n    //}\n\n}","import React, { Component } from 'react'\nimport ProjectTask from './ProjectTasks/ProjectTask'\n\nclass Backlog extends Component {\n    render() {\n        const {project_tasks_props} = this.props\n\n        const tasks = project_tasks_props.map(project_task => (\n            <ProjectTask key={project_task.id} project_task={project_task} />\n        ))\n\n        let todoItems = [];\n        let inProgressItems =  [];\n        let doneItems = [];\n\n        for(let i= 0; i < tasks.length; i++) {\n            if(tasks[i].props.project_task.status === 'TO_DO') {\n                todoItems.push(tasks[i])\n            }\n\n            if(tasks[i].props.project_task.status === 'IN_PROGRESS') {\n                inProgressItems.push(tasks[i])\n            }\n            if(tasks[i].props.project_task.status === 'DONE') {\n                doneItems.push(tasks[i])\n            }\n        }\n\n        return (\n             <div className=\"container\">\n             <div className=\"row\">\n                 <div className=\"col-md-4\">\n                     <div className=\"card text-center mb-2\">\n                         <div className=\"card-header bg-secondary text-white\">\n                             <h3>TO DO</h3>\n                         </div>\n                     </div>\n                     {todoItems}\n                     \n                 </div>\n                 <div className=\"col-md-4\">\n                     <div className=\"card text-center mb-2\">\n                         <div className=\"card-header bg-primary text-white\">\n                             <h3>In Progress</h3>\n                         </div>\n                     </div>\n                     {inProgressItems}\n                 </div>\n                 <div className=\"col-md-4\">\n                     <div className=\"card text-center mb-2\">\n                         <div className=\"card-header bg-success text-white\">\n                             <h3>Done</h3>\n                         </div>\n                     </div>\n                     {doneItems}\n                 </div>\n             </div>\n         </div>\n        )\n    }\n}\n\nexport default Backlog\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport Backlog from './Backlog';\nimport {connect} from 'react-redux'\nimport PropTypes from \"prop-types\"\nimport { getBacklog } from \"../../actions/backlogAction\"\n\nclass ProjectBoard extends Component {\n\n    constructor() {\n        super();\n            this.state = {\n                errors:{}\n            }\n        \n    }\n\n    componentDidMount() {\n        const {id} = this.props.match.params\n        this.props.getBacklog(id)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({errors:nextProps.errors})\n        }\n    }\n\n\n\n    render() {\n        const { id } = this.props.match.params\n        const {project_tasks} = this.props.backlog\n        const { errors } = this.state\n\n\n        let boardContent;\n\n        const boardAlgorithm = (errors, project_tasks) => {\n            if(project_tasks.length < 1) {\n                if(errors.projectNotFound) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            {errors.projectNotFound}\n                        </div>\n                        \n                    )\n                } else if(errors.projectIdentifier) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            {errors.projectIdentifier}\n                        </div>\n                        \n                    )\n                } else {\n                    return (\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\n                            No Project tasks on this board.\n                        </div>\n                    )\n                }\n            } else {\n                return <Backlog project_tasks_props ={project_tasks} />\n            }\n        }\n\n        boardContent = boardAlgorithm(errors, project_tasks)\n\n\n\n\n\n\n\n        return (\n\n            <div className=\"container\">\n            <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                <i className=\"fa fa-plus-circle\"> Create Project Task</i>\n            </Link>\n            <br />\n            <hr />\n           {boardContent}\n    \n        </div>\n        )\n    }\n}\n\nProjectBoard.propTypes = {\n    backlog:PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    backlog: state.backlog,\n    errors: state.errors\n    \n})\nexport default connect(mapStateToProps, {getBacklog}) (ProjectBoard)\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport classnames from 'classnames';\nimport {addProjectTask} from '../../../actions/backlogAction'\nimport PropTypes from \"prop-types\"\n\nclass AddProjectTask extends Component {\n\n    constructor(props) {\n        super(props)\n        const {id} =  this.props.match.params;\n\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"0\",\n            dueDate: \"\",\n            projectIdentifier: id,\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({ errors:nextProps.errors })\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newTask={\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate\n        };\n        this.props.addProjectTask(\n            this.state.projectIdentifier, \n            newTask, \n            this.props.history\n        )\n\n    }\n\n\n\n\n    render() {\n        const { id } =  this.props.match.params;\n        const{errors} = this.state;\n\n        return (\n            <div className=\"add-PBI\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                    <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                        Back to Project Board\n                    </Link>\n                    <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                            <input type=\"text\" \n                            className={classnames(\"form-control form-control-lg\", {\n                                \"is-invalid\":errors.summary\n                            })}\n                            name=\"summary\" \n                            placeholder=\"Project Task summary\" \n                            value={this.state.summary}\n                            onChange={this.onChange}\n                        />\n                        {errors.summary && (\n                                <div className=\"invalid-feedback\">{errors.summary}</div>\n                            )}\n                        </div>\n                        <div className=\"form-group\">\n                            <textarea className=\"form-control form-control-lg\" \n                            placeholder=\"Acceptance Criteria\" \n                            name=\"acceptanceCriteria\"\n                            value = {this.state.acceptanceCriteria}\n                            onChange={this.onChange}\n                            \n                        ></textarea>\n                        </div>\n                        <h6>Due Date</h6>\n                        <div className=\"form-group\">\n                            <input type=\"date\" \n                            className=\"form-control form-control-lg\" \n                            name=\"dueDate\"\n                            value = {this.state.dueDate} \n                            onChange={this.onChange}\n                        />\n                        </div>\n                        <div className=\"form-group\">\n                            <select className=\"form-control form-control-lg\" \n                                name=\"priority\"\n                                value={this.state.priority}\n                                onChange={this.onChange}\n                            >\n                                <option value={0}>Select Priority</option>\n                                <option value={1}>High</option>\n                                <option value={2}>Medium</option>\n                                <option value={3}>Low</option>\n                            </select>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <select className=\"form-control form-control-lg\" \n                                name=\"status\"\n                                value={this.state.status}\n                                onChange={this.onChange}\n                            >\n                                <option value=\"\">Select Status</option>\n                                <option value=\"TO_DO\">TO DO</option>\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                <option value=\"DONE\">DONE</option>\n                            </select>\n                        </div>\n\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n        )\n    }\n}\nAddProjectTask.propTypes = {\n    addProjectTask:PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired\n}\n\nconst mapStateToProps=state=> ({\n    errors: state.errors\n})\n\nexport default connect(\n    mapStateToProps, \n    { addProjectTask}\n    )(AddProjectTask);\n","import React, { Component } from 'react'\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogAction\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\n\nclass UpdateProjectTask extends Component {\n\n    constructor() {\n        super()\n\n        this.state={\n            id:\"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"\",\n            dueDate: \"\",\n            projectIdentifier: \"\",\n            created_At: \"\",\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentDidMount() {\n\n        const {backlog_id, pt_id} = this.props.match.params;\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n    }\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors})\n        }\n\n\n        const {\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            created_At\n        } = nextProps.project_task;\n\n        this.setState({\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            created_At\n        })\n\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n    onSubmit(e) {\n        e.preventDefault()\n\n        const UpdateProjectTask = {\n            id:this.state.id,\n            projectSequence: this.state.projectSequence,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n            projectIdentifier: this.state.projectIdentifier,\n            created_At: this.state.created_At\n        }\n\n        this.props.updateProjectTask(\n            this.state.projectIdentifier, \n            this.state.projectSequence,\n            UpdateProjectTask, \n            this.props.history\n        )\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                            <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} | Project ID: {\" \"} \n                            {this.state.projectSequence}{\" \"}\n                        </p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" \n                                    className={classnames(\"form-control form-control-lg\", {\n                                        \"is-invalid\":errors.summary\n                                    })}\n                                    name=\"summary\" \n                                    placeholder=\"Project Task summary\" \n                                    value={this.state.summary}\n                                    onChange={this.onChange}\n                                />\n                                {errors.summary && (\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea className=\"form-control form-control-lg\" \n                                    placeholder=\"Acceptance Criteria\" \n                                    name=\"acceptanceCriteria\"\n                                    value = {this.state.acceptanceCriteria}\n                                    onChange={this.onChange}\n                                    \n                                ></textarea>\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"date\" \n                                        className=\"form-control form-control-lg\"\n                                        name=\"dueDate\"\n                                        value = {this.state.dueDate} \n                                        onChange = {this.onChange}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" \n                                        name=\"priority\"\n                                        value={this.state.priority}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select className=\"form-control form-control-lg\" \n                                        name=\"status\"\n                                        value={this.state.status}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n    </div>\n        )\n    }\n}\n\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {getProjectTask, updateProjectTask})(UpdateProjectTask)\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\nclass Landing extends Component {\n\n    componentDidMount() {\n        if(this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\")\n        }\n    }\n\n    render() {\n        return (\n         <div className=\"landing\">\n            <div className=\"light-overlay landing-inner text-dark\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 text-center\">\n                            <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\n                            <p className=\"lead\">\n                                Create your account to join active projects or start your own\n                            </p>\n                            <hr />\n                            <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                                Sign Up\n                            </Link>\n                            <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                                Login\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security,\n})\n\nexport default connect(mapStateToProps)(Landing)\n","import React, { Component } from 'react'\nimport { createNewUser } from \"../../actions/securityActions\"\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\n\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        \n        this.state = {\n            username: \"\",\n            fullName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            fullName: this.state.fullName,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n        }\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors });\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\")\n        }\n    }\n\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.fullName\n                                        })} \n                                        placeholder=\"Name\" \n                                        name=\"fullName\"\n                                        value={this.state.fullName}\n                                        onChange={this.onChange}\n                                    />\n                                    {\n                                    errors.fullName && (\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address (Username)\" \n                                        name=\"username\" \n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {\n                                    errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\" \n                                        name=\"password\" \n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                     {\n                                    errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.confirmPassword\n                                        })}\n                                        placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\" \n                                        value={this.state.confirmPassword}\n                                        onChange={this.onChange}\n                                    />\n                                    {\n                                    errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                                    )}\n                                </div>\n                                <input \n                                    type=\"submit\" \n                                    className=\"btn btn-info btn-block mt-4\" \n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n    \n}\n\nconst mapStateToProps = state =>({\n    errors: state.errors,\n    security: state.security\n\n});\n\nexport default connect\n    (mapStateToProps, \n    {createNewUser}\n    )(Register);\n","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\"\nimport classnames from \"classnames\"\nimport {login} from \"../../actions/securityActions\"\n\nclass Login extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentDidMount() {\n        if(this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\")\n        }\n    }\n\n    onChange(e) {\n        this.setState({\n           [e.target.name]: e.target.value \n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n\n        if(nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\")\n        }\n        if(nextProps.errors) {\n            this.setState({ errors:nextProps.errors })\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const LoginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        }\n\n        this.props.login(LoginRequest)\n    }\n\n\n\n    render() {\n        const {errors} = this.state\n\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"email\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        } )} \n                                        placeholder=\"Email Address\" \n                                        name=\"username\" \n                                        value = {this.state.username}\n                                        onChange = {this.onChange}\n                                    />\n                                    {\n                                        errors.username && (\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\n                                        )\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        type=\"password\" \n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.password\n                                        })} \n                                        placeholder=\"Password\" \n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange = {this.onChange} \n                                    />\n                                     {\n                                        errors.password && (\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\n                                        )\n                                    }\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n\nexport default connect(\n    mapStateToProps, \n    {login}) \n    (Login)\n","import React, { Component } from 'react'\nimport {Route, Redirect} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\n\nconst SecuredRoute = ({component:Component, security, ...otherProps}) =>(\n    <Route \n        {...otherProps} \n        render = {props => \n            security.validToken === true ? (\n        <Component{...props}/>\n        ) :(\n        <Redirect to=\"/login\"/>\n            )\n        }  \n    />\n)\nSecuredRoute.propTypes = {\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps) (SecuredRoute)","import React from 'react';\nimport './App.css';\nimport Dashboard from './componets/Dashboard';\nimport Header from './componets/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from './componets/Project/AddProject';\nimport  { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from './componets/Project/UpdateProject';\nimport ProjectBoard from './componets/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './componets/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './componets/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './componets/Layout/Landing';\nimport Register from './componets/UserManagement/Register';\nimport Login from './componets/UserManagement/Login';\nimport jwt_decode from \"jwt-decode\"\nimport setJWTToken from \"./securityUtils/setJWTToken\"\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\"\n\nconst jwtToken = localStorage.jwtToken\n\nif(jwtToken) {\n  setJWTToken(jwtToken)\n  const decoded_jwtToken = jwt_decode(jwtToken)\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now()/1000\n  if(decoded_jwtToken.exp < currentTime) {\n\n    store.dispatch(logout())\n    window.location.href=\"/\"\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n      <div className=\"App\">\n        <Header/>\n        {\n          //Public Routes\n        }\n\n        <Route exact path=\"/\" component={Landing}/>\n        <Route exact path=\"/register\" component={Register}/>\n        <Route exact path=\"/login\" component={Login}/>\n\n\n        {\n          //Private Routes\n        }\n        <Switch>\n          <SecuredRoute exact path=\"/dashboard\" component={Dashboard}/>\n          <SecuredRoute exact path=\"/addProject\" component={AddProject}/>\n          <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject}/>\n          <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard}/>\n          <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask}/>\n          <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask}/>\n        </Switch>\n      </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}